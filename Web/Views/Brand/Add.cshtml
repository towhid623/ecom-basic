@model Service.ViewModels.VmBrandAdd
@{
    ViewBag.Title = "Add Brand";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="card-custom">
    <h4 class="text-center">Add Brand</h4>

    @using (Html.BeginForm("Add", "Brand", FormMethod.Post, new { @id = "mainForm", enctype = "multipart/form-data", @autocomplete = "off", onSubmit = "return ValidateFormData()" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row form-group">
            <div class="col-sm-4">
                <label>Brand Name</label>
                @Html.HiddenFor(model => model.BrandHeaderId, new { @class = "form-control", Value = "0" })
                @Html.TextBoxFor(model => model.BrandName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BrandName, "", new { @class = "text-danger" })
            </div>
            <div class="col-sm-4"></div>
            <div class="col-sm-4"></div>
        </div>
        <div class="text-right">
            <button class="btn btn-success" type="submit">Submit</button>
        </div>
    }
</div>
@section scripts{
    <script>
    var successMsg = '@TempData["SuccessMsg"]';
    var failedMsg = '@TempData["FailedMsg"]';
    $(document).ready(function () {
        if (successMsg != null && successMsg != "" && typeof successMsg != "undefined") {
            alert(successMsg);
        }
        if (failedMsg != null && failedMsg != "" && typeof failedMsg != "undefined") {
            alert(failedMsg);
        }
    });
    </script>
}

